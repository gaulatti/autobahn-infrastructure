scalar AWSDateTime

type Team {
  id: ID!
  name: String!
  memberships: [Membership]
  beacons: [Beacon]
  projects: [Project]
  created_at: AWSDateTime!
  updated_at: AWSDateTime!
  deleted_at: AWSDateTime
}

type Project {
  name: String!
  team: Team!
  targets: [Target]
  assignments: [Assignment]
}

type Membership {
  id: ID!
  team: Team!
  user: User!
  role: Int!
  beacons: [Beacon]
  assignments: [Assignment]
}

type Assignment {
  id: ID!
  membership: Membership!
  project: Project!
  role: Int!
}

type User {
  id: ID!
  sub: String!
  name: String!
  last_name: String!
  memberships: [Membership]
  email: String!
  created_at: AWSDateTime!
  updated_at: AWSDateTime!
  deleted_at: AWSDateTime
}

type Schedule {
  id: ID!
  provider: Int!
  target: Target!
  cron: String!
  next_execution: AWSDateTime!
  created_at: AWSDateTime!
  updated_at: AWSDateTime!
  deleted_at: AWSDateTime
}

type Target {
  id: ID!
  project: Project!
  schedules: [Schedule]
  beacons: [Beacon]
  engagements: [Engagement]
  statistics: [Statistic]
  stage: Int!
  provider: Int!
  name: String!
  url: String
  lambda_arn: String
  created_at: AWSDateTime!
  updated_at: AWSDateTime!
  deleted_at: AWSDateTime
}

type Engagement {
  id: ID!
  target: Target!
  bounce_rate: Int!
  mode: Int!
  date_from: AWSDateTime!
  date_to: AWSDateTime!
  created_at: AWSDateTime!
  updated_at: AWSDateTime!
  deleted_at: AWSDateTime
}

type Beacon {
  id: ID!
  team: Team!
  target: Target
  triggered_by: Assignment
  stage: Int!
  uuid: ID!
  url: String!
  provider: Int!
  mode: Int!
  fcp: Float!
  lcp: Float!
  tti: Float!
  si: Float!
  cls: Float!
  performance_score: Int!
  pleasantness_score: Int
  status: Int!
  created_at: AWSDateTime!
  updated_at: AWSDateTime!
  ended_at: AWSDateTime
  deleted_at: AWSDateTime
}

type Statistic {
  id: ID!
  target: Target!
  period: Int!
  statistic: Int!
  count: Int!
  provider: Int!
  mode: Int!
  fcp: Float!
  lcp: Float!
  tti: Float!
  si: Float!
  cls: Float!
  performance_score: Int!
  pleasantness_score: Int
  date_from: AWSDateTime!
  date_to: AWSDateTime!
  created_at: AWSDateTime!
  updated_at: AWSDateTime!
  deleted_at: AWSDateTime
}

# Core
type Feature {
  key: String!
  is_enabled: Boolean!
}

type Kickoff {
  features: [Feature]
  me: User
}

type Query {
  kickoff: Kickoff

  # Get Team Data
  projects: [Project]
  beacons: [Beacon]
  schedules: [Schedule]

  # Get Admin Data
  users: [User]
}
